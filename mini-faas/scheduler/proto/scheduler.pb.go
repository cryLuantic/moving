// Code generated by protoc-gen-gogo.
// source: scheduler.proto
// DO NOT EDIT!

/*
Package schedulerproto is a generated protocol buffer package.

It is generated from these files:
	scheduler.proto

It has these top-level messages:
	AcquireContainerRequest
	AcquireContainerReply
	ReturnContainerRequest
	ReturnContainerReply
	FunctionConfig
*/
package schedulerproto

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type AcquireContainerRequest struct {
	RequestId      string          `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	AccountId      string          `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	FunctionName   string          `protobuf:"bytes,3,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"`
	FunctionConfig *FunctionConfig `protobuf:"bytes,4,opt,name=function_config,json=functionConfig" json:"function_config,omitempty"`
}

func (m *AcquireContainerRequest) Reset()                    { *m = AcquireContainerRequest{} }
func (m *AcquireContainerRequest) String() string            { return proto.CompactTextString(m) }
func (*AcquireContainerRequest) ProtoMessage()               {}
func (*AcquireContainerRequest) Descriptor() ([]byte, []int) { return fileDescriptorScheduler, []int{0} }

func (m *AcquireContainerRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *AcquireContainerRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *AcquireContainerRequest) GetFunctionName() string {
	if m != nil {
		return m.FunctionName
	}
	return ""
}

func (m *AcquireContainerRequest) GetFunctionConfig() *FunctionConfig {
	if m != nil {
		return m.FunctionConfig
	}
	return nil
}

type AcquireContainerReply struct {
	NodeId          string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	NodeAddress     string `protobuf:"bytes,2,opt,name=node_address,json=nodeAddress,proto3" json:"node_address,omitempty"`
	NodeServicePort int64  `protobuf:"varint,3,opt,name=node_service_port,json=nodeServicePort,proto3" json:"node_service_port,omitempty"`
	ContainerId     string `protobuf:"bytes,4,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
}

func (m *AcquireContainerReply) Reset()                    { *m = AcquireContainerReply{} }
func (m *AcquireContainerReply) String() string            { return proto.CompactTextString(m) }
func (*AcquireContainerReply) ProtoMessage()               {}
func (*AcquireContainerReply) Descriptor() ([]byte, []int) { return fileDescriptorScheduler, []int{1} }

func (m *AcquireContainerReply) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *AcquireContainerReply) GetNodeAddress() string {
	if m != nil {
		return m.NodeAddress
	}
	return ""
}

func (m *AcquireContainerReply) GetNodeServicePort() int64 {
	if m != nil {
		return m.NodeServicePort
	}
	return 0
}

func (m *AcquireContainerReply) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

type ReturnContainerRequest struct {
	RequestId             string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	ContainerId           string `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	DurationInNanos       int64  `protobuf:"varint,3,opt,name=duration_in_nanos,json=durationInNanos,proto3" json:"duration_in_nanos,omitempty"`
	MaxMemoryUsageInBytes int64  `protobuf:"varint,4,opt,name=max_memory_usage_in_bytes,json=maxMemoryUsageInBytes,proto3" json:"max_memory_usage_in_bytes,omitempty"`
	ErrorCode             string `protobuf:"bytes,5,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage          string `protobuf:"bytes,6,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (m *ReturnContainerRequest) Reset()                    { *m = ReturnContainerRequest{} }
func (m *ReturnContainerRequest) String() string            { return proto.CompactTextString(m) }
func (*ReturnContainerRequest) ProtoMessage()               {}
func (*ReturnContainerRequest) Descriptor() ([]byte, []int) { return fileDescriptorScheduler, []int{2} }

func (m *ReturnContainerRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *ReturnContainerRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *ReturnContainerRequest) GetDurationInNanos() int64 {
	if m != nil {
		return m.DurationInNanos
	}
	return 0
}

func (m *ReturnContainerRequest) GetMaxMemoryUsageInBytes() int64 {
	if m != nil {
		return m.MaxMemoryUsageInBytes
	}
	return 0
}

func (m *ReturnContainerRequest) GetErrorCode() string {
	if m != nil {
		return m.ErrorCode
	}
	return ""
}

func (m *ReturnContainerRequest) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

type ReturnContainerReply struct {
}

func (m *ReturnContainerReply) Reset()                    { *m = ReturnContainerReply{} }
func (m *ReturnContainerReply) String() string            { return proto.CompactTextString(m) }
func (*ReturnContainerReply) ProtoMessage()               {}
func (*ReturnContainerReply) Descriptor() ([]byte, []int) { return fileDescriptorScheduler, []int{3} }

type FunctionConfig struct {
	TimeoutInMs   int64  `protobuf:"varint,1,opt,name=timeout_in_ms,json=timeoutInMs,proto3" json:"timeout_in_ms,omitempty"`
	MemoryInBytes int64  `protobuf:"varint,2,opt,name=memory_in_bytes,json=memoryInBytes,proto3" json:"memory_in_bytes,omitempty"`
	Handler       string `protobuf:"bytes,3,opt,name=handler,proto3" json:"handler,omitempty"`
}

func (m *FunctionConfig) Reset()                    { *m = FunctionConfig{} }
func (m *FunctionConfig) String() string            { return proto.CompactTextString(m) }
func (*FunctionConfig) ProtoMessage()               {}
func (*FunctionConfig) Descriptor() ([]byte, []int) { return fileDescriptorScheduler, []int{4} }

func (m *FunctionConfig) GetTimeoutInMs() int64 {
	if m != nil {
		return m.TimeoutInMs
	}
	return 0
}

func (m *FunctionConfig) GetMemoryInBytes() int64 {
	if m != nil {
		return m.MemoryInBytes
	}
	return 0
}

func (m *FunctionConfig) GetHandler() string {
	if m != nil {
		return m.Handler
	}
	return ""
}

func init() {
	proto.RegisterType((*AcquireContainerRequest)(nil), "schedulerproto.AcquireContainerRequest")
	proto.RegisterType((*AcquireContainerReply)(nil), "schedulerproto.AcquireContainerReply")
	proto.RegisterType((*ReturnContainerRequest)(nil), "schedulerproto.ReturnContainerRequest")
	proto.RegisterType((*ReturnContainerReply)(nil), "schedulerproto.ReturnContainerReply")
	proto.RegisterType((*FunctionConfig)(nil), "schedulerproto.FunctionConfig")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Scheduler service

type SchedulerClient interface {
	AcquireContainer(ctx context.Context, in *AcquireContainerRequest, opts ...grpc.CallOption) (*AcquireContainerReply, error)
	ReturnContainer(ctx context.Context, in *ReturnContainerRequest, opts ...grpc.CallOption) (*ReturnContainerReply, error)
}

type schedulerClient struct {
	cc *grpc.ClientConn
}

func NewSchedulerClient(cc *grpc.ClientConn) SchedulerClient {
	return &schedulerClient{cc}
}

func (c *schedulerClient) AcquireContainer(ctx context.Context, in *AcquireContainerRequest, opts ...grpc.CallOption) (*AcquireContainerReply, error) {
	out := new(AcquireContainerReply)
	err := grpc.Invoke(ctx, "/schedulerproto.Scheduler/AcquireContainer", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulerClient) ReturnContainer(ctx context.Context, in *ReturnContainerRequest, opts ...grpc.CallOption) (*ReturnContainerReply, error) {
	out := new(ReturnContainerReply)
	err := grpc.Invoke(ctx, "/schedulerproto.Scheduler/ReturnContainer", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Scheduler service

type SchedulerServer interface {
	AcquireContainer(context.Context, *AcquireContainerRequest) (*AcquireContainerReply, error)
	ReturnContainer(context.Context, *ReturnContainerRequest) (*ReturnContainerReply, error)
}

func RegisterSchedulerServer(s *grpc.Server, srv SchedulerServer) {
	s.RegisterService(&_Scheduler_serviceDesc, srv)
}

func _Scheduler_AcquireContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AcquireContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerServer).AcquireContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schedulerproto.Scheduler/AcquireContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerServer).AcquireContainer(ctx, req.(*AcquireContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scheduler_ReturnContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReturnContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerServer).ReturnContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schedulerproto.Scheduler/ReturnContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerServer).ReturnContainer(ctx, req.(*ReturnContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Scheduler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "schedulerproto.Scheduler",
	HandlerType: (*SchedulerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AcquireContainer",
			Handler:    _Scheduler_AcquireContainer_Handler,
		},
		{
			MethodName: "ReturnContainer",
			Handler:    _Scheduler_ReturnContainer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "scheduler.proto",
}

func init() { proto.RegisterFile("scheduler.proto", fileDescriptorScheduler) }

var fileDescriptorScheduler = []byte{
	// 484 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x4d, 0x6f, 0x13, 0x31,
	0x10, 0x65, 0x93, 0x92, 0x2a, 0x93, 0x26, 0x01, 0x8b, 0xb6, 0x4b, 0x25, 0x50, 0x59, 0xa0, 0x54,
	0x1c, 0x72, 0x28, 0x17, 0xae, 0x25, 0x12, 0x68, 0x0f, 0xa9, 0xd0, 0x56, 0x9c, 0x57, 0xae, 0x3d,
	0x69, 0x57, 0x8a, 0xed, 0xd4, 0x1f, 0x55, 0x73, 0xe7, 0x97, 0xf0, 0x5f, 0xf8, 0x07, 0xfc, 0x20,
	0x64, 0x7b, 0x37, 0x28, 0x1b, 0x50, 0xc5, 0x6d, 0xe7, 0xbd, 0xe7, 0xf1, 0x7b, 0xe3, 0x59, 0x18,
	0x1b, 0x76, 0x83, 0xdc, 0x2d, 0x50, 0x4f, 0x96, 0x5a, 0x59, 0x45, 0x46, 0x6b, 0x20, 0xd4, 0xd9,
	0xcf, 0x04, 0x0e, 0xcf, 0xd9, 0xad, 0xab, 0x34, 0x4e, 0x95, 0xb4, 0xb4, 0x92, 0xa8, 0x0b, 0xbc,
	0x75, 0x68, 0x2c, 0x79, 0x01, 0xa0, 0xe3, 0x67, 0x59, 0xf1, 0x34, 0x39, 0x4e, 0x4e, 0xfb, 0x45,
	0xbf, 0x46, 0x72, 0xee, 0x69, 0xca, 0x98, 0x72, 0x32, 0xd0, 0x9d, 0x48, 0xd7, 0x48, 0xce, 0xc9,
	0x6b, 0x18, 0xce, 0x9d, 0x64, 0xb6, 0x52, 0xb2, 0x94, 0x54, 0x60, 0xda, 0x0d, 0x8a, 0xbd, 0x06,
	0xbc, 0xa0, 0x02, 0xc9, 0x17, 0x18, 0xaf, 0x45, 0x4c, 0xc9, 0x79, 0x75, 0x9d, 0xee, 0x1c, 0x27,
	0xa7, 0x83, 0xb3, 0x97, 0x93, 0x4d, 0xa3, 0x93, 0xcf, 0xb5, 0x6c, 0x1a, 0x54, 0xc5, 0x68, 0xbe,
	0x51, 0x67, 0x3f, 0x12, 0xd8, 0xdf, 0xce, 0xb1, 0x5c, 0xac, 0xc8, 0x21, 0xec, 0x4a, 0xc5, 0xf1,
	0x4f, 0x84, 0x9e, 0x2f, 0x73, 0x4e, 0x5e, 0xc1, 0x5e, 0x20, 0x28, 0xe7, 0x1a, 0x8d, 0xa9, 0x13,
	0x0c, 0x3c, 0x76, 0x1e, 0x21, 0xf2, 0x1e, 0x9e, 0x06, 0x89, 0x41, 0x7d, 0x57, 0x31, 0x2c, 0x97,
	0x4a, 0xdb, 0x90, 0xa3, 0x5b, 0x8c, 0x3d, 0x71, 0x19, 0xf1, 0xaf, 0x4a, 0x5b, 0xdf, 0x8e, 0x35,
	0x37, 0xfb, 0xcb, 0x76, 0x62, 0xbb, 0x35, 0x96, 0xf3, 0xec, 0x7b, 0x07, 0x0e, 0x0a, 0xb4, 0x4e,
	0xcb, 0xff, 0x9d, 0x75, 0xbb, 0x79, 0x67, 0xab, 0xb9, 0xf7, 0xca, 0x9d, 0xa6, 0x61, 0x94, 0x95,
	0x1f, 0xb9, 0x54, 0xa6, 0xf1, 0xda, 0x10, 0xb9, 0xbc, 0xf0, 0x30, 0xf9, 0x08, 0xcf, 0x05, 0xbd,
	0x2f, 0x05, 0x0a, 0xa5, 0x57, 0xa5, 0x33, 0xf4, 0x1a, 0xfd, 0x99, 0xab, 0x95, 0x45, 0x13, 0x8c,
	0x77, 0x8b, 0x7d, 0x41, 0xef, 0x67, 0x81, 0xff, 0xe6, 0xe9, 0x5c, 0x7e, 0xf2, 0xa4, 0xf7, 0x89,
	0x5a, 0x2b, 0x5d, 0x32, 0xc5, 0x31, 0x7d, 0x1c, 0x7d, 0x06, 0x64, 0xaa, 0x38, 0xfa, 0x47, 0x8f,
	0xb4, 0x40, 0xe3, 0x8f, 0xa5, 0xbd, 0xf8, 0xe8, 0x01, 0x9c, 0x45, 0x2c, 0x3b, 0x80, 0x67, 0x5b,
	0x53, 0x58, 0x2e, 0x56, 0xd9, 0x1d, 0x8c, 0x36, 0x5f, 0x99, 0x64, 0x30, 0xb4, 0x95, 0x40, 0xe5,
	0xac, 0xb7, 0x27, 0x4c, 0x18, 0x4c, 0xb7, 0x18, 0xd4, 0x60, 0x2e, 0x67, 0x86, 0x9c, 0xc0, 0xb8,
	0xce, 0xb1, 0x4e, 0xd0, 0x09, 0xaa, 0x61, 0x84, 0x1b, 0xe7, 0x29, 0xec, 0xde, 0x50, 0xc9, 0x17,
	0xa8, 0xeb, 0x4d, 0x6c, 0xca, 0xb3, 0x5f, 0x09, 0xf4, 0x2f, 0x9b, 0x6d, 0x23, 0x1c, 0x9e, 0xb4,
	0x17, 0x89, 0xbc, 0x6b, 0x6f, 0xe3, 0x3f, 0x7e, 0x99, 0xa3, 0xb7, 0x0f, 0x0b, 0x7d, 0xd2, 0x47,
	0x84, 0xc2, 0xb8, 0x35, 0x03, 0x72, 0xd2, 0x3e, 0xfb, 0xf7, 0x55, 0x39, 0x7a, 0xf3, 0xa0, 0x2e,
	0x5c, 0x71, 0xd5, 0x0b, 0xec, 0x87, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa8, 0x92, 0xf9, 0x9f,
	0x04, 0x04, 0x00, 0x00,
}
